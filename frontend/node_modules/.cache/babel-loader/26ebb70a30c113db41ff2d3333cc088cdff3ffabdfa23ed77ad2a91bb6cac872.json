{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport MyMenu from \"./MyMenu\";\nimport Fade from \"react-reveal/Fade\";\nimport { FaShoppingCart, FaTrashAlt } from \"react-icons/fa\";\nconst Menu = () => {\n  _s();\n  const [menuItems, setMenuItems] = useState([]);\n  const [filteredItems, setFilteredItems] = useState([]);\n  const [activeSection, setActiveSection] = useState(\"All\");\n  const [cart, setCart] = useState([]);\n  const [showCart, setShowCart] = useState(false);\n  const [searchParams] = useSearchParams();\n  const tableNumber = searchParams.get(\"table\") || \"Unknown\";\n  useEffect(() => {\n    const fetchMenuData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:4000/api/menu\");\n        const data = await response.json();\n        const formattedData = data.map(item => ({\n          ...item,\n          ingredients: item.ingredients ? JSON.parse(item.ingredients) : [],\n          price: parseFloat(item.price),\n          img: `http://localhost:4000${item.img}`\n        }));\n        setMenuItems(formattedData);\n        setFilteredItems(formattedData);\n      } catch (error) {\n        console.error(\"Erreur:\", error);\n      }\n    };\n    fetchMenuData();\n  }, []);\n  const handleOrder = async () => {\n    if (cart.length === 0) {\n      alert(\"Votre panier est vide !\");\n      return;\n    }\n    const orderData = {\n      tableNumber,\n      items: cart.map(item => ({\n        ...item,\n        // Assurez-vous que les ingrédients sont inclus\n        ingredients: item.ingredients || []\n      })),\n      totalPrice: calculateTotal()\n    };\n    try {\n      const response = await fetch(\"http://localhost:4000/api/orders\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(orderData)\n      });\n      if (response.ok) {\n        alert(\"Commande envoyée avec succès !\");\n        setCart([]);\n        setShowCart(false);\n      } else {\n        const errorData = await response.json();\n        alert(errorData.message || \"Erreur lors de l'envoi de la commande\");\n      }\n    } catch (error) {\n      console.error(\"Erreur:\", error);\n      alert(\"Erreur de connexion au serveur\");\n    }\n  };\n\n  // ... (le reste du code reste inchangé)\n};\n_s(Menu, \"boqYIa3lh5YFh3XbiaJHtAYt4wE=\", false, function () {\n  return [useSearchParams];\n});\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","MyMenu","Fade","FaShoppingCart","FaTrashAlt","Menu","_s","menuItems","setMenuItems","filteredItems","setFilteredItems","activeSection","setActiveSection","cart","setCart","showCart","setShowCart","searchParams","tableNumber","get","fetchMenuData","response","fetch","data","json","formattedData","map","item","ingredients","JSON","parse","price","parseFloat","img","error","console","handleOrder","length","alert","orderData","items","totalPrice","calculateTotal","method","headers","body","stringify","ok","errorData","message","_c","$RefreshReg$"],"sources":["C:/Users/moezh_vsbm2cv/OneDrive/Bureau/Coffe_Shop/frontend/src/Components/Food Menu/Menu.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport MyMenu from \"./MyMenu\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport { FaShoppingCart, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nconst Menu = () => {\r\n  const [menuItems, setMenuItems] = useState([]);\r\n  const [filteredItems, setFilteredItems] = useState([]);\r\n  const [activeSection, setActiveSection] = useState(\"All\");\r\n  const [cart, setCart] = useState([]);\r\n  const [showCart, setShowCart] = useState(false);\r\n  const [searchParams] = useSearchParams();\r\n  const tableNumber = searchParams.get(\"table\") || \"Unknown\";\r\n\r\n  useEffect(() => {\r\n    const fetchMenuData = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:4000/api/menu\");\r\n        const data = await response.json();\r\n        \r\n        const formattedData = data.map(item => ({\r\n          ...item,\r\n          ingredients: item.ingredients ? JSON.parse(item.ingredients) : [],\r\n          price: parseFloat(item.price),\r\n          img: `http://localhost:4000${item.img}`\r\n        }));\r\n\r\n        setMenuItems(formattedData);\r\n        setFilteredItems(formattedData);\r\n      } catch (error) {\r\n        console.error(\"Erreur:\", error);\r\n      }\r\n    };\r\n    fetchMenuData();\r\n  }, []);\r\n\r\n  const handleOrder = async () => {\r\n    if (cart.length === 0) {\r\n      alert(\"Votre panier est vide !\");\r\n      return;\r\n    }\r\n\r\n    const orderData = {\r\n      tableNumber,\r\n      items: cart.map(item => ({\r\n        ...item,\r\n        // Assurez-vous que les ingrédients sont inclus\r\n        ingredients: item.ingredients || []\r\n      })),\r\n      totalPrice: calculateTotal()\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:4000/api/orders\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(orderData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"Commande envoyée avec succès !\");\r\n        setCart([]);\r\n        setShowCart(false);\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(errorData.message || \"Erreur lors de l'envoi de la commande\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur:\", error);\r\n      alert(\"Erreur de connexion au serveur\");\r\n    }\r\n  };\r\n\r\n  // ... (le reste du code reste inchangé)\r\n};\r\n\r\nexport default Menu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}