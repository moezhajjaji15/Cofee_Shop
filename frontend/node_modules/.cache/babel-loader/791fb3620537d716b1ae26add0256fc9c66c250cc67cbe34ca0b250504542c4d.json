{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moezh_vsbm2cv\\\\OneDrive\\\\Bureau\\\\Coffe_Shop\\\\frontend\\\\src\\\\Components\\\\Food Menu\\\\MenuData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MyMenu from \"./MyMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuPage = () => {\n  _s();\n  // Assuming data comes from an API or backend (using static data here)\n  const [menuItems, setMenuItems] = useState([]);\n\n  // Fetch data on component mount\n  useEffect(() => {\n    // Simulating fetching data (Replace with your API call)\n    const fetchMenuItems = async () => {\n      // Replace with actual API call to fetch data from the backend\n      const response = await fetch(\"/api/menu\");\n      const data = await response.json();\n      setMenuItems(data);\n    };\n    fetchMenuItems();\n  }, []);\n\n  // Handle adding item to cart (example function)\n  const handleAddToCart = item => {\n    console.log(\"Added to cart:\", item);\n    // Implement actual cart logic here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-6\",\n      children: \"Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap\",\n      children: menuItems.length > 0 ? menuItems.map(item => /*#__PURE__*/_jsxDEV(MyMenu, {\n        title: item.title,\n        price: item.price,\n        description: item.description,\n        img: item.img,\n        onAddToCart: () => handleAddToCart(item)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading menu...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) // Display loading message while data is being fetched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuPage, \"aerj4MrH8qL8Ldj4pa1rYEuE5iM=\");\n_c = MenuPage;\nexport default MenuPage;\nvar _c;\n$RefreshReg$(_c, \"MenuPage\");","map":{"version":3,"names":["React","useState","useEffect","MyMenu","jsxDEV","_jsxDEV","MenuPage","_s","menuItems","setMenuItems","fetchMenuItems","response","fetch","data","json","handleAddToCart","item","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","price","description","img","onAddToCart","id","_c","$RefreshReg$"],"sources":["C:/Users/moezh_vsbm2cv/OneDrive/Bureau/Coffe_Shop/frontend/src/Components/Food Menu/MenuData.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MyMenu from \"./MyMenu\";\r\n\r\nconst MenuPage = () => {\r\n  // Assuming data comes from an API or backend (using static data here)\r\n  const [menuItems, setMenuItems] = useState([]);\r\n\r\n  // Fetch data on component mount\r\n  useEffect(() => {\r\n    // Simulating fetching data (Replace with your API call)\r\n    const fetchMenuItems = async () => {\r\n      // Replace with actual API call to fetch data from the backend\r\n      const response = await fetch(\"/api/menu\");\r\n      const data = await response.json();\r\n      setMenuItems(data);\r\n    };\r\n\r\n    fetchMenuItems();\r\n  }, []);\r\n\r\n  // Handle adding item to cart (example function)\r\n  const handleAddToCart = (item) => {\r\n    console.log(\"Added to cart:\", item);\r\n    // Implement actual cart logic here\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-3xl font-bold text-center mb-6\">Menu</h1>\r\n      <div className=\"flex flex-wrap\">\r\n        {menuItems.length > 0 ? (\r\n          menuItems.map((item) => (\r\n            <MyMenu\r\n              key={item.id}\r\n              title={item.title}\r\n              price={item.price}\r\n              description={item.description}\r\n              img={item.img}\r\n              onAddToCart={() => handleAddToCart(item)}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>Loading menu...</p> // Display loading message while data is being fetched\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,CAAC;MACzC,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,YAAY,CAACI,IAAI,CAAC;IACpB,CAAC;IAEDH,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,eAAe,GAAIC,IAAI,IAAK;IAChCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;IACnC;EACF,CAAC;;EAED,oBACEX,OAAA;IAAKc,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCf,OAAA;MAAIc,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7DnB,OAAA;MAAKc,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BZ,SAAS,CAACiB,MAAM,GAAG,CAAC,GACnBjB,SAAS,CAACkB,GAAG,CAAEV,IAAI,iBACjBX,OAAA,CAACF,MAAM;QAELwB,KAAK,EAAEX,IAAI,CAACW,KAAM;QAClBC,KAAK,EAAEZ,IAAI,CAACY,KAAM;QAClBC,WAAW,EAAEb,IAAI,CAACa,WAAY;QAC9BC,GAAG,EAAEd,IAAI,CAACc,GAAI;QACdC,WAAW,EAAEA,CAAA,KAAMhB,eAAe,CAACC,IAAI;MAAE,GALpCA,IAAI,CAACgB,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACF,CAAC,gBAEFnB,OAAA;QAAAe,QAAA,EAAG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC;IACxB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CA5CID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}